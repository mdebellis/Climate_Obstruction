PREFIX owl:  <http://www.w3.org/2002/07/owl#>
PREFIX rdf:  <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX skos: <http://www.w3.org/2004/02/skos/core#>
PREFIX gist: <https://w3id.org/semanticarts/ns/ontology/gist/>
PREFIX co:  <https://www.michaeldebellis.com/climate_obstruction/>

#Find all A-Box subject triples
SELECT *
WHERE {?individual rdf:type owl:NamedIndividual.
OPTIONAL{?s ?p ?individual}         
OPTIONAL{?individual co:tbox ?tbox}
BIND(EXISTS{?individual rdf:type co:Document} AS ?doc)
FILTER(!bound(?tbox) && !?doc)}

#Delete all A-Box subject triples
DELETE {?s ?p ?individual}
WHERE {?individual rdf:type owl:NamedIndividual.
OPTIONAL{?s ?p ?individual}         
OPTIONAL{?individual co:tbox ?tbox}
BIND(EXISTS{?individual rdf:type co:Document} AS ?doc)
FILTER(!bound(?tbox) && !?doc)}

#Find all A-Box object triples
SELECT *
WHERE {?individual rdf:type owl:NamedIndividual.
OPTIONAL{?individual ?p ?o}         
OPTIONAL{?individual co:tbox ?tbox}
BIND(EXISTS{?individual rdf:type co:Document} AS ?doc)
FILTER(!bound(?tbox) && !?doc)}

#Delete all A-Box object triples
DELETE {?individual ?p ?o} 
WHERE {?individual rdf:type owl:NamedIndividual.
OPTIONAL{?individual ?p ?o}         
OPTIONAL{?individual co:tbox ?tbox}
BIND(EXISTS{?individual rdf:type co:Document} AS ?doc)
FILTER(!bound(?tbox) && !?doc)}

SELECT *
WHERE {?doc rdf:type co:Journal_Article;
            co:author_string ?as}
			
SELECT *
WHERE {?doc rdf:type co:Document;
            co:url ?url.}
			
SELECT *
WHERE {?doc rdf:type co:Document;
            co:author_string ?as.}
			
			
SELECT * 
WHERE {co:The_Climate_Lockdown_Conspiracy_Theory co:has_direct_part ?sub_task.
OPTIONAL {?sub_task co:has_direct_part ?subSub_task.}}



# Some example SPARQL queries that may be useful for debugging
# List all people (mostly authors at this point) and their names
SELECT * 
WHERE 	{?person rdf:type gist:Person;
		          co:last_name ?last;
				  co:first_name ?first;
				  co:middle_name ?middle.}
				  
# List all People and all their property values.
# The FILTER is because there can be axioms that aren't meant to be viewed
# (which is why they are blank nodes) but are still part of the graph
SELECT * 
WHERE 	{?subject rdf:type gist:Person;
		          ?predicate ?object.
		FILTER(!isBlank(?object))}

# Honestly can't remember why I needed this but I remember it was useful for something
# Displays all instances of Person as well as all properties of the Person class. 
SELECT * 
WHERE 	{?subject rdf:type gist:Person.
		gist:Person ?predicate ?object.
		FILTER(!isBlank(?o))}

# Displays various subclasses of Agent and their properties. 
# Useful for showing connections among Agents
SELECT * 
WHERE {gist:Person ?p ?o.
       gist:Corporation ?p1 ?o1.
	   co:Foundation ?p2 ?o2.}

# Lists all properties with their domain and range
SELECT * 
WHERE {?property rdf:type owl:ObjectProperty;
                 rdfs:domain ?dclass;
                 rdfs:range ?rclass.}
				 
# This is to replicate one of the figures (figure 1) in the 
# Environmental Obstruction book. Used Annotation Properties because
# the nodes in the figure are classes and don't want to use puns			 
SELECT *
WHERE {?s ?p ?o.
       ?p rdfs:subPropertyOf co:influence.}
				 
# Check for duplicate entities
SELECT *
WHERE {?s1 rdfs:label ?label.
       ?s2 rdfs:label ?label.
FILTER(STR(?s1) < STR(?s2))}

# Delete duplicate entities
DELETE {?s2 ?p ?o.}
WHERE {?s1 rdfs:label ?label.
       ?s2 rdfs:label ?label;
	        ?p ?o.
FILTER(STR(?s1) < STR(?s2))}

CONSTRUCT {?doc skos:isDefinedBy ?url}
WHERE {?doc co:url ?url}
		
CONSTRUCT{co:Austria rdf:type co:Nation;
                  gist:isMemberOf co:European_Union.
co:Belgium rdf:type co:Nation;
                  gist:isMemberOf co:European_Union.
co:Bulgaria rdf:type co:Nation;
                  gist:isMemberOf co:European_Union.
co:Croatia rdf:type co:Nation;
                  gist:isMemberOf co:European_Union.
co:Cyprus rdf:type co:Nation;
                  gist:isMemberOf co:European_Union.
co:Czech Republic rdf:type co:Nation;
                  gist:isMemberOf co:European_Union.
co:Denmark rdf:type co:Nation;
                  gist:isMemberOf co:European_Union.
co:Estonia rdf:type co:Nation;
                  gist:isMemberOf co:European_Union.
co:Finland rdf:type co:Nation;
                  gist:isMemberOf co:European_Union.
co:France rdf:type co:Nation;
                  gist:isMemberOf co:European_Union.
co:Germany rdf:type co:Nation;
                  gist:isMemberOf co:European_Union.
co:Greece rdf:type co:Nation;
                  gist:isMemberOf co:European_Union.
co:Hungary rdf:type co:Nation;
                  gist:isMemberOf co:European_Union.
co:Ireland rdf:type co:Nation;
                  gist:isMemberOf co:European_Union.
co:Italy rdf:type co:Nation;
                  gist:isMemberOf co:European_Union.
co:Latvia rdf:type co:Nation;
                  gist:isMemberOf co:European_Union.
co:Lithuania rdf:type co:Nation;
                  gist:isMemberOf co:European_Union.
co:Luxembourg rdf:type co:Nation;
                  gist:isMemberOf co:European_Union.
co:Malta rdf:type co:Nation;
                  gist:isMemberOf co:European_Union.
co:Netherlands rdf:type co:Nation;
                  gist:isMemberOf co:European_Union.
co:Poland rdf:type co:Nation;
                  gist:isMemberOf co:European_Union.
co:Portugal rdf:type co:Nation;
                  gist:isMemberOf co:European_Union.
co:Romania rdf:type co:Nation;
                  gist:isMemberOf co:European_Union.
co:Slovakia rdf:type co:Nation;
                  gist:isMemberOf co:European_Union.
co:Slovenia rdf:type co:Nation;
                  gist:isMemberOf co:European_Union.
co:Spain rdf:type co:Nation;
                  gist:isMemberOf co:European_Union.
co:Sweden rdf:type co:Nation;
                  gist:isMemberOf co:European_Union.}
WHERE {}